generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Buyer
  Seller
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(Buyer)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products  Product[]
  likes     ProductLike[]
  reviews   Review[]
  orders    Order[] // <-- Relasi timbal balik untuk Order
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sellerId    Int
  seller      User     @relation(fields: [sellerId], references: [id])

  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])

  likes       ProductLike[]
  reviews     Review[]
  orderItems  OrderItem[] // <-- Relasi timbal balik untuk OrderItem
}

model ProductLike {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String
  createdAt DateTime @default(now())

  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  productId Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  status    String   @default("PENDING")
  total     Float

  buyerId   Int
  buyer     User     @relation(fields: [buyerId], references: [id])

  items     OrderItem[]
}

model OrderItem {
  id        Int   @id @default(autoincrement())
  quantity  Int
  price     Float

  orderId   Int
  order     Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  productId Int
  product   Product @relation(fields: [productId], references: [id])
}